# -*- coding: utf-8 -*-
"""AutoMLipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OyeKe3vP6LQOw7VBBgGnMPDXgZ84kyvY
"""

!pip install h2o 
!pip install autokeras
!pip install mlbox 
!pip install sklearn
!pip install tensorflow==2.1.0

"""# H2O"""

import pandas as pd
import h2o
from h2o.automl import H2OAutoML

h2o.init()

imp = pd.read_csv('/content/Churn_treino.csv',';')

imp = h2o.H2OFrame(imp)

treino, teste = imp.split_frame(ratios=[0.7])

print(imp)

treino['Exited'] = treino['Exited'].asfactor()

teste['Exited'] = teste['Exited'].asfactor()

modelo = H2OAutoML(max_runtime_secs=60)

modelo.train(y='Exited',training_frame=treino)

ranking = modelo.leaderboard

ranking

teste = pd.read_csv('/content/Churn_prever.csv',sep=';')
teste = h2o.H2OFrame(teste)
prever = modelo.leader.predict(teste)

prever = prever.as_data_frame(prever)

prever

"""# AutoKeras"""

import autokeras as ak
import pandas as pd
from sklearn.model_selection import train_test_split

imp = pd.read_csv('/content/Churn_treino.csv',sep=';')

X = imp.iloc[:,0:10]

y =  imp.iloc[:,10]

X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.3, random_state=0)

modelo = ak.StructuredDataClassifier(max_trials=10)
modelo.fit(x=X_train, y = y_train, epochs=100)

modelo.evaluate(x=X_test, y=y_test)

prever = pd.read_csv('/content/Churn_prever.csv',sep=';')

previsao = modelo.predict(prever)

previsao

"""# MLBOX"""

!pip install setuptools 
!pip install wheel

!pip install -U setuptools
!pip install --upgrade 
!pip setuptools wheel

!pip install mlbox

from mlbox.preprocessing import *
from mlbox.optimization import *
from mlbox.prediction import *

